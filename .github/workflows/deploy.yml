name: Deploy Flask App to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: myflaskapp

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0
        

    - name: Terraform Init
      run: |
        cd terraform
        terraform init

        
    # - name: Terraform Destroy
    #   run: |
    #     cd terraform
    #     terraform destroy

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve
    

    - name: Configure kubectl
      run: |
        aws eks update-kubeconfig --name my-eks-cluster --region $AWS_REGION

    - name: Clean up old resources
      run: |
        kubectl delete deployment myflaskapp -n microservices --ignore-not-found
        kubectl delete service myflaskapp-service -n microservices --ignore-not-found
        kubectl delete secret ghcr-secret -n microservices --ignore-not-found

    - name: Ensure namespace exists
      run: kubectl apply -f k8s/namespace.yaml

    - name: Create or update GHCR secret
      run: |
        kubectl create secret docker-registry ghcr-secret \
          --docker-server=ghcr.io \
          --docker-username=${{ secrets.GHCR_USERNAME }} \
          --docker-password=${{ secrets.GHCR_PAT }} \
          --docker-email=${{ secrets.GHCR_EMAIL }} \
          --namespace microservices \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: aws-auth
      run: |
        kubectl apply -f aws-auth.yaml

    - name: Deploy App
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: Check pods
      run: kubectl get pods -n microservices
