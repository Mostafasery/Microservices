name: Deploy Flask App to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: myflaskapp

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: |
        cd terraform
        terraform init

        terraform import aws_iam_role.eks_cluster_role eks-cluster-role
        terraform import aws_iam_role.aws_iam_role.eks_node_role eks-node-role

    
    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve
    
    - name: Configure kubectl
      run: |
        
        aws eks update-kubeconfig --name $(terraform output -raw cluster_name) --region $AWS_REGION

    - name: Create GHCR pull secret
      run: |
        cd k8s
        kubectl create secret docker-registry ghcr-secret \
          --docker-server=ghcr.io \
          --docker-username=${{ secrets.GHCR_USERNAME }} \
          --docker-password=${{ secrets.GHCR_PAT }} \
          --docker-email=${{ secrets.GHCR_EMAIL }} \
          -n microservices || true

    - name: Deploy Namespace
      run: kubectl apply -f k8s/namespace.yaml
    
    - name: Deploy App
      run: |
        cd k8s
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml
